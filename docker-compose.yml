version: "3.8"

networks:
  full-application:
    driver: bridge

services:
  db: 
    image: postgres
    restart: always
    container_name: postgres-container
    networks:
      - full-application
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 80s  
    volumes:
      - pgdata:/var/lib/postgresql/data
  api:
    depends_on:
      db:
        condition: service_started
    networks:
      - full-application
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: node-container
    restart: unless-stopped
    env_file: ./backend/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "3003:3000"
  web: 
    build: ./frontend
    container_name: react-container
    networks:
      - full-application
    restart: always
    depends_on:
      - api
    ports:
      - "3000:3000"

volumes:
  pgdata:
    external: true